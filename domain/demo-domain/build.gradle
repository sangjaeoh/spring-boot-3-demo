plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '9.8.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jpa
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:' + dependencyManagement.importedProperties['querydsl.version'] + ':jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // h2 DB
    runtimeOnly 'com.h2database:h2'

    // flyway
    implementation 'org.flywaydb:flyway-core'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // jsonNullable
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 설정
// querydsl 디렉토리
def querydslDirectory = layout.buildDirectory.dir("generated/querydsl").get().asFile

// querydsl QClass 파일 생성 위치
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(querydslDirectory)
}

sourceSets {
    main.java.srcDirs += [querydslDirectory]
}

clean.doLast {
    file(querydslDirectory).deleteDir()
}